_____________________________
-The 0-add_integer module
_____________________________

-import the function:
_____________________________
>>> add_integer = __import__('0-add_integer').add_integer

_____________________________

-test the function:
_____________________________

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2, )
100

>>> add_integer(-2, -5)
-7

>>> add_integer(3.3, )
101

>>> add_integer(None, )
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(5, "Hello")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("Hello", "World")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(str(str), str(str))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(('1', '3'))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(([1], '3'))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(((1), '3'))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, [98])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(float("inf"))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer(float("NaN"))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

_____________________________
